<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cache on The Geek Speaks</title>
    <link>https://thegeekspeaks.net/tags/cache/</link>
    <description>Recent content in cache on The Geek Speaks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Apr 2014 02:39:33 +0000</lastBuildDate>
    
	<atom:link href="https://thegeekspeaks.net/tags/cache/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Magento appending __SID to URLs</title>
      <link>https://thegeekspeaks.net/post/2014-04-23-magento-appending-__sid-to-urls/</link>
      <pubDate>Wed, 23 Apr 2014 02:39:33 +0000</pubDate>
      
      <guid>https://thegeekspeaks.net/post/2014-04-23-magento-appending-__sid-to-urls/</guid>
      <description>When trying to fully optimize a Magento website to run as fast as possible, I tend to opt for turning on all of the caching options in Magento, and then put the Varnish caching server in front of the web server with the Turpentine plugin. However, when you do this with some configurations, you start seeing the __SID query string parameter added to the end of the site&amp;rsquo;s url. Unfortunately, when the Turpentine plugin sees the __SID query string in the URL, it means that this page request will bypass the cache and load it directly from the server, slowing things down.</description>
    </item>
    
    <item>
      <title>Magento FrontName Naming and SSL/HTTPS</title>
      <link>https://thegeekspeaks.net/post/2014-03-26-magento-frontname-naming-and-sslhttps/</link>
      <pubDate>Wed, 26 Mar 2014 03:03:25 +0000</pubDate>
      
      <guid>https://thegeekspeaks.net/post/2014-03-26-magento-frontname-naming-and-sslhttps/</guid>
      <description>One of the things that has always been an issue for sites that are based on Magento is that they are slow. Well, to be fair, sites using Magento Enterprise Edition that take advantage of the built-in full-page caching functionality seem to have decent page load times. One way to take care of this slow load time issue is to utilize a third-party full-page caching solution such as what Varnish provides.</description>
    </item>
    
    <item>
      <title>Magento Cache with Cache Disabled</title>
      <link>https://thegeekspeaks.net/post/2014-03-25-magento-cache-with-cache-disabled/</link>
      <pubDate>Tue, 25 Mar 2014 02:02:20 +0000</pubDate>
      
      <guid>https://thegeekspeaks.net/post/2014-03-25-magento-cache-with-cache-disabled/</guid>
      <description>One of the things that I find quite annoying with a web platform is when you configure it to do one thing, and it does something different. Magento is an eCommerce software platform that many of the leading eCommerce websites use for their web stores. ##Magento Magento comes in two different flavors, a paid enterprise edition as well as a open-source community edition. The enterprise edition allows you to utilize the built-in full-page caching mechanism, while the community edition does not include a full-page caching solution.</description>
    </item>
    
  </channel>
</rss>